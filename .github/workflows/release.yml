# .github/workflows/release.yml
name: Release Eva

on:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --release

      - name: Create tar.gz archive
        run: tar -czf ./target/release/eva-${{ github.event.release.tag_name }}-x86_64-unknown-linux-gnu.tar.gz ./target/release/eva

      #   - name: Create tar.xz archive
      #     run: tar -cJf ./target/release/eva-${{ github.event.release.tag_name }}-x86_64-unknown-linux-gnu.tar.xz ./target/release/eva

      #   - name: Install zstd
      #     run: sudo apt-get install -y zstd

      #   - name: Create tar.zst archive
      #     run: tar -c --zstd -f ./target/release/eva-${{ github.event.release.tag_name }}-x86_64-unknown-linux-gnu.tar.zst ./target/release/eva

      # upload to GitHub Releases
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/release/eva-${{ github.event.release.tag_name }}-x86_64-unknown-linux-gnu.tar.gz
          asset_name: eva-${{ github.event.release.tag_name }}-x86_64-unknown-linux-gnu.tar.gz
          asset_content_type: application/gzip

  macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --release

      - name: Create zip archive
        run: zip -j ./target/release/Eva-${{ github.event.release.tag_name }}-x86_64-apple-darwin.zip ./target/release/eva

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/release/eva-${{ github.event.release.tag_name }}-x86_64-apple-darwin.zip
          asset_name: eva-${{ github.event.release.tag_name }}-x86_64-apple-darwin.zip
          asset_content_type: application/zip

  windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --release

      - name: Create zip archive
        run: powershell Compress-Archive -Path ./target/release/eva.exe -DestinationPath ./target/release/eva-${{ github.event.release.tag_name }}-x86_64-pc-windows-msvc.zip

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/release/eva-${{ github.event.release.tag_name }}-x86_64-pc-windows-msvc.zip
          asset_name: eva-${{ github.event.release.tag_name }}-x86_64-pc-windows-msvc.zip
          asset_content_type: application/zip
